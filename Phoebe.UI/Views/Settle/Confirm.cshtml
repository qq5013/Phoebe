@model Phoebe.Model.Settlement

@{
    ViewBag.Title = "结算确认";
}

@section styles {
    @Styles.Render("~/Content/datepicker")
}

<!-- BEGIN PAGE HEADER-->
<h3 class="page-title">
    @ViewBag.Title
</h3>
<div class="page-bar">
    <ul class="page-breadcrumb">
        <li>
            <i class="fa fa-home"></i>
            <a href="@Url.Action("Index", "Home")">主页</a>
            <i class="fa fa-angle-right"></i>
        </li>
        <li>
            <a href="#">业务审核</a>
            <i class="fa fa-angle-right"></i>
        </li>
        <li>
            <a href="#">@ViewBag.Title</a>
        </li>
    </ul>
</div>
<!-- END PAGE HEADER-->
<!-- BEGIN PAGE CONTENT-->
<div class="row">
    <div class="col-md-12">
        <div class="portlet box blue">
            <div class="portlet-title">
                <div class="caption">
                    <i class="fa fa-plus"></i>结算信息
                </div>
                <div class="tools">
                    <a href="javascript:;" class="collapse">
                    </a>
                    <a href="javascript:;" class="reload">
                    </a>
                    <a href="javascript:;" class="remove">
                    </a>
                </div>
            </div>
            <div class="portlet-body">
                <table class="table table-striped table-bordered table-hover">
                    <thead>
                        <tr>
                            <th style="width: 20%;">
                                属性
                            </th>
                            <th>
                                说明
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>
                                @Html.DisplayNameFor(model => model.Number)
                            </td>
                            <td>
                                @Html.DisplayFor(model => model.Number)
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.DisplayNameFor(model => model.CustomerType)
                            </td>
                            <td>
                                @{
                                    CustomerType type1 = (CustomerType)Model.CustomerType;
                                    @type1.DisplayName();
                                }
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.DisplayNameFor(model => model.CustomerID)
                            </td>
                            <td>
                                @Model.CustomerName()
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.DisplayNameFor(model => model.StartTime)
                            </td>
                            <td>
                                @Model.StartTime.ToDateString()
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.DisplayNameFor(model => model.EndTime)
                            </td>
                            <td>
                                @Model.EndTime.ToDateString()
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.DisplayNameFor(model => model.PastPrice)
                            </td>
                            <td>
                                @Html.DisplayFor(model => model.PastPrice)
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.DisplayNameFor(model => model.SumPrice)
                            </td>
                            <td>
                                @Html.DisplayFor(model => model.SumPrice)
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.DisplayNameFor(model => model.Discount)
                            </td>
                            <td>
                                @Html.DisplayFor(model => model.Discount)
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.DisplayNameFor(model => model.Remission)
                            </td>
                            <td>
                                @Html.DisplayFor(model => model.Remission)
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.DisplayNameFor(model => model.TotalPrice)
                            </td>
                            <td>
                                @Html.DisplayFor(model => model.TotalPrice)
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.DisplayNameFor(model => model.SettleTime)
                            </td>
                            <td>
                                @Model.SettleTime.ToDateString()
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.DisplayNameFor(model => model.UserID)
                            </td>
                            <td>
                                @Model.User.Name
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.DisplayNameFor(model => model.Remark)
                            </td>
                            <td>
                                @Html.DisplayFor(model => model.Remark)
                            </td>
                        </tr>
                    </tbody>
                </table>

                <hr />
                <div class="form">
                    @using (Html.BeginForm("Confirm", "Settle", FormMethod.Post, new { @class = "form-horizontal" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-body">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.ID)
                            @Html.HiddenFor(model => model.Number)

                            <div class="form-group">
                                <label class="col-md-3 control-label">审核</label>
                                <div class="col-md-8">
                                    <div class="radio-list">
                                        <label class="radio-inline">
                                            <input type="radio" name="auditResult" value="1" checked> 通过
                                        </label>
                                        <label class="radio-inline">
                                            <input type="radio" name="auditResult" value="2"> 不通过
                                        </label>
                                    </div>
                                </div>
                                <div class="col-md-1">
                                    <span class="required">*</span>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.PaidPrice, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.PaidPrice, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PaidPrice, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1">
                                    <span class="required">*</span>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ConfirmTime, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.ConfirmTime, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ConfirmTime, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1">
                                    <span class="required">*</span>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-actions">
                                <div class="row">
                                    <div class="col-md-offset-3 col-md-9">
                                        <button type="submit" class="btn btn-success"><i class="fa fa-check"></i> 保存</button>
                                        <a href="@Url.Action("Audit", new { controller = "StockIn"})" class="btn btn-default">&nbsp;取消</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<!-- END PAGE CONTENT-->

@section Scripts {
    @Scripts.Render("~/bundles/datepicker")
    <script type="text/javascript">
        $(function () {
            phoebe.leftNavActive($('#menu-settle-audit'));
            phoebe.initDatePicker($('#ConfirmTime'), true);
        });
    </script>
}