@model Phoebe.Model.BaseSettlement

@{
    ViewBag.Title = "基本费用结算";
    Cargo cargo = ViewBag.Cargo;
}

@section styles {
    @Styles.Render("~/Content/datepicker")
}

<!-- BEGIN PAGE HEADER-->
<h3 class="page-title">
    @ViewBag.Title
</h3>
<div class="page-bar">
    <ul class="page-breadcrumb">
        <li>
            <i class="fa fa-home"></i>
            <a href="@Url.Action("Index", "Home")">主页</a>
            <i class="fa fa-angle-right"></i>
        </li>
        <li>
            <a href="#">财务结算</a>
            <i class="fa fa-angle-right"></i>
        </li>
        <li>
            <a href="#">@ViewBag.Title</a>
        </li>
    </ul>
</div>
<!-- END PAGE HEADER-->
<!-- BEGIN PAGE CONTENT-->
<div class="row">
    <div class="col-md-12">
        <div class="portlet box green">
            <div class="portlet-title">
                <div class="caption">
                    <i class="fa fa-info"></i>&nbsp;基本费用信息
                </div>
                <div class="tools">
                    <a href="javascript:;" class="collapse">
                    </a>
                    <a href="javascript:;" class="reload">
                    </a>
                    <a href="javascript:;" class="remove">
                    </a>
                </div>
            </div>
            <div class="portlet-body">
                <table class="table table-striped table-bordered table-hover">
                    <thead>
                        <tr>
                            <th style="width: 20%;">
                                属性
                            </th>
                            <th>
                                说明
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>
                                货品名称
                            </td>
                            <td>
                                @cargo.Name
                            </td>
                        </tr>
                        <tr>
                            <td>
                                所属合同
                            </td>
                            <td>
                                @cargo.Contract.Name ( @cargo.Contract.Number )
                            </td>
                        </tr>
                        <tr>
                            <td>
                                计费方式
                            </td>
                            <td>
                                @{
                                    BillingType type = (BillingType)cargo.Billing.BillingType;
                                    @(type.DisplayName() + " (" + type.DisplayDescription() + ")")
                                }
                            </td>
                        </tr>
                        <tr>
                            <td>
                                是否计时
                            </td>
                            <td>
                                @if (cargo.Billing.IsTiming)
                                {
                                    <span>是</span>
                                }
                                else
                                {
                                    <span>否</span>
                                }
                            </td>
                        </tr>
                        <tr>
                            <td>
                                装卸费(元)
                            </td>
                            <td>
                                @cargo.Billing.HandlingPrice
                            </td>
                        </tr>
                        <tr>
                            <td>
                                结冻费(元)
                            </td>
                            <td>
                                @cargo.Billing.FreezePrice
                            </td>
                        </tr>
                        <tr>
                            <td>
                                处置费(元)
                            </td>
                            <td>
                                @cargo.Billing.DisposePrice
                            </td>
                        </tr>
                        <tr>
                            <td>
                                包装费(元)
                            </td>
                            <td>
                                @cargo.Billing.PackingPrice
                            </td>
                        </tr>
                        <tr>
                            <td>
                                租赁费(元)
                            </td>
                            <td>
                                @cargo.Billing.RentPrice
                            </td>
                        </tr>
                        <tr>
                            <td>
                                其它费用(元)
                            </td>
                            <td>
                                @cargo.Billing.OtherPrice
                            </td>
                        </tr>
                        <tr>
                            <td>
                                备注
                            </td>
                            <td>
                                @cargo.Billing.Remark
                            </td>
                        </tr>
                        <tr>
                            <td>
                                费用合计 (元)
                            </td>
                            <td>
                                @Model.SumPrice
                            </td>
                        </tr>
                    </tbody>
                </table>

                <hr />
                <div class="form">
                    @using (Html.BeginForm("BaseProcess", "Settle", FormMethod.Post, new { @class = "form-horizontal" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            <h4>结算信息</h4>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.CargoID)
                            @Html.HiddenFor(model => model.SumPrice)

                            <div class="form-group">
                                @Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1">
                                    <span class="required">*</span>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1">
                                    <span class="required">*</span>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Remission, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Remission, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Remission, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1">
                                    <span class="required">*</span>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.TotalPrice, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.TotalPrice, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.TotalPrice, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.SettleTime, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.SettleTime, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.SettleTime, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1">
                                    <span class="required">*</span>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-actions">
                                <div class="row">
                                    <div class="col-md-offset-3 col-md-9">
                                        <button type="submit" class="btn btn-success"><i class="fa fa-check"></i> 保存</button>
                                        <a href="@Url.Action("Base", new { controller = "Settle"})" class="btn btn-default">&nbsp;取消</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
               
            </div>
        </div>
    </div>
</div>
<!-- END PAGE CONTENT-->

@section Scripts {
    @Scripts.Render("~/bundles/datepicker")
    <script type="text/javascript">
        $(function () {
            phoebe.leftNavActive($('#menu-settle-base'));
            phoebe.initDatePicker($('#SettleTime'), true);

            var sum = parseFloat('@Model.SumPrice');

            function calc() {
                var discount = parseFloat($('#Discount').val());
                var remission = parseFloat($('#Remission').val());

                var total = sum * discount / 100 - remission;

                $('#TotalPrice').val(total.toFixed(2));
            }

            $('#Discount').bind('input', function () {
                calc();
            });

            $('#Remission').bind('input', function () {
                calc();
            });
        });
    </script>
}